# SPDX-License-Identifier: Apache-2.0
# SPDX-FileCopyrightText: Â© 2022- twinify Developers and their Assignees

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#     http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Release

on:
  push:
    branches: [ "*stable", "twinifyv2" ]
    tags: [ "*rc*" ]

jobs:
  build_pypi_wheels:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
    - name: Install environment
      run: |
        python -m pip install --upgrade pip
        python -m pip install build
    - name: Build wheel
      run: |
        python -m build
    - uses: actions/upload-artifact@v3
      with:
        path: ./dist/*
        name: dist

  upload_pypi_wheels:
    name: Upload wheels to PyPI
    runs-on: ubuntu-latest
    needs:
      - build_pypi_wheels
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: dist
          path: ./dist/
      - uses: pypa/gh-action-pypi-publish@release/v1
        name: Upload to PyPI
        if: contains(github.ref, 'stable')
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          skip_existing: true

  create_release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs:
      - build_pypi_wheels
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
      - run: |
          python -m pip install -e .[compatible-dependencies]
      - uses: actions/download-artifact@v3
        with:
          name: dist
          path: ./dist/
      - name: Publish Pre-Release
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION=$(python -c "import twinify.version; print(twinify.version.VERSION)")
          TAG_NAME=${GITHUB_REF##refs/tags/}
          echo "Version: ${VERSION}"
          echo "Ref: ${GITHUB_REF}"
          echo "Tag: ${TAG_NAME}"
          assets=()
          for asset in $(find dist -type f); do
            echo "Adding asset: ${asset}"
            assets+=("-a" "$asset")
          done
          hub release create -p "${assets[@]}" -m "$VERSION" -F ChangeLog.txt "$VERSION"
      - name: Publish Release
        if: contains(github.ref, 'stable')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION=$(python -c "import twinify.version; print(twinify.version.VERSION)")
          echo "Version: ${VERSION}"
          echo "Ref: ${GITHUB_REF}"
          echo "Commit: ${GITHUB_SHA}"
          assets=()
          for asset in $(find dist -type f); do
            echo "Adding asset: ${asset}"
            assets+=("-a" "$asset")
          done
          hub release create "${assets[@]}" -m "$VERSION" -F ChangeLog.txt -t "$GITHUB_SHA" "$VERSION"
